数据结构概述
最后更新于 2025-01-08
本文档介绍多维表格数据表中记录、字段和视图等的数据结构。多维表格中的数据表由记录（record）和字段（field）组成， 同时可以拥有多个视图（view）。

记录
记录由 record 和 fields 两个结构组成。

record 结构
record 是一个 object 结构类型。

参数	数据类型	描述
record_id	string	记录的 ID
fields	map	记录的字段
fields 结构
fields 字段为 map 型，由字段名称和其具体内容的键值对组成。了解 fields 详细结构和参数描述，参考多维表格记录数据结构。

{
  "任务情况总结": [
    {
      "text": "网站更新任务由黄泡泡负责，正在进行中",
      "type": "text"
    }
  ]
}
参数	数据类型	描述	示例值
key

string

多维表格数据表中的字段名称。

"任务情况总结"

value

union

某个字段的具体内容，其结构可以是数字、字符串、布尔型、字符串列表或对象列表。详情参考下文。

该示例值为对象列表，更多示例，参考多维表格记录数据结构。

[
  {
    "text": "网站更新任务正在进行中",
    "type": "text"
  }
]
字段
字段即多维表格数据表中的“列”，是一个object结构类型。字段的基本结构如下所示。了解字段详细结构和参数描述，参考字段编辑指南。

{
    "field_id": "fldYWaldeW", // 字段的 ID
    "field_name": "文本",   // 字段名称
    "type": 1,  // 字段的类型，详情参考下文
    "description": "字段的描述", // 对字段的更多说明
    "is_primary": true,   // 该字段是否是初始的索引字段
    "property": null,   // 字段的属性，详情参考下文
    "ui_type": "Text",  // 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
    "is_hidden": false  // 字段是否是隐藏字段
}
参数描述如下所示：

名称	类型	描述
field_id

string

字段 ID

field_name

string

字段名称

type

int

字段类型：相同类型用ui_type区分：

1：文本（默认值）、条码（需声明 "ui_type": "Barcode"）、邮箱（需声明"ui_type": "Email")
2：数字（默认值）、进度（需声明 "ui_type": "Progress"）、货币（需声明 "ui_type": "Currency"）、评分（需声明 "ui_type": "Rating")
3：单选
4：多选
5：日期
7：复选框
11：人员
13：电话号码
15：超链接
17：附件
18：单向关联
19：查找引用
20：公式
21：双向关联
22：地理位置
23：群组
1001：创建时间
1002：最后更新时间
1003：创建人
1004：修改人
1005：自动编号
description

字段的描述

对字段的更多说明。

is_primary

true/false

该字段是否是初始的索引字段。

property

object

字段属性，因字段类型而异。详情参考字段编辑指南。

ui_type

string

字段的 UI 类型：

"Text"：文本
"Email"：邮箱
"Barcode"：条码
"Number"：数字
"Progress"：进度
"Currency"：货币
"Rating"：评分
"SingleSelect"：单选
"MultiSelect"：多选
"DateTime"：日期
"Checkbox"：复选框
"User"：人员
"GroupChat"：群组
"Phone"：电话号码
"Url"：超链接
"Attachment"：附件
"SingleLink"：单向关联
"Formula"：公式
"Lookup": 查找引用
"DuplexLink"：双向关联
"Location"：地理位置
"CreatedTime"：创建时间
"ModifiedTime"：最后更新时间
"CreatedUser"：创建人
"ModifiedUser"：修改人
"AutoNumber"：自动编号
is_hidden

true/false

字段是否是隐藏字段。

视图
视图是一个 object 结构类型。

参数	类型	描述
view_id

string

视图 ID。view_id 在一个多维表格中唯一，在全局不一定唯一。获取方式：

你可通过多维表格 URL 获取 view_id，下图高亮部分即为当前视图的唯一标识。



你也可通过列出视图接口获取 view_id。暂时无法获取到嵌入到文档中的多维表格的 view_id。

view_name

string

视图名称

view_type

string

视图类型，支持以下类型，默认为 grid 类型。

grid：表格视图
kanban：看板视图
gallery：画册视图
gantt：甘特视图
form：表单视图
自定义数据结构
delete_record
参数	数据类型	描述
deleted	boolean	是否删除成功
record_id	string	单条记录的 ID


const lark = require('@larksuiteoapi/node-sdk');

// 开发者复制该Demo后，需要修改Demo里面的"app id", "app secret"为自己应用的appId, appSecret
const client = new lark.Client({
    appId: 'app id',
    appSecret: 'app secret',
    // disableTokenCache为true时，SDK不会主动拉取并缓存token，这时需要在发起请求时，调用lark.withTenantToken("token")手动传递
    // disableTokenCache为false时，SDK会自动管理租户token的获取与刷新，无需使用lark.withTenantToken("token")手动传递token
    disableTokenCache: true
});

client.bitable.v1.app.get({
        path: {
                app_token:'appbcbWCzen6D8dezhoCH2RpMAh',
        },
},
    lark.withTenantToken("t-7f1b******8e560")
).then(res => {
    console.log(res);
}).catch(e => {
    console.error(JSON.stringify(e.response.data, null, 4));
});
响应
响应体
名称
类型
描述
code

int

错误码，非 0 表示失败

msg

string

错误描述

data

-

-

响应体示例
123456789101112131415