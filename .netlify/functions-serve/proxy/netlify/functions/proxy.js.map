{
  "version": 3,
  "sources": ["file:///D:/%E6%A1%8C%E9%9D%A2/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/netlify/functions/proxy.js"],
  "sourceRoot": "C:/Users/\u8881\u660A\u5929/AppData/Local/Temp/tmp-53460-TyEiTlSXRwDl",
  "sourcesContent": ["exports.handler = async (event, context) => {\r\n    const { httpMethod, path, headers, body } = event;\r\n\r\n    // \u4ECE\u8DEF\u5F84\u4E2D\u63D0\u53D6API endpoint\r\n    const apiPath = path.replace('/.netlify/functions/proxy', '');\r\n    const apiUrl = `https://open.feishu.cn${apiPath}`;\r\n\r\n    console.log('Proxying request to:', apiUrl);\r\n\r\n    try {\r\n        // \u6784\u9020\u8BF7\u6C42\u9009\u9879\r\n        const requestOptions = {\r\n            method: httpMethod,\r\n            headers: {\r\n                'Authorization': headers.authorization || headers.Authorization,\r\n                'Content-Type': headers['content-type'] || 'application/json',\r\n            }\r\n        };\r\n\r\n        // \u5982\u679C\u662FPOST/PUT\u8BF7\u6C42\uFF0C\u6DFB\u52A0body\r\n        if (httpMethod === 'POST' || httpMethod === 'PUT') {\r\n            requestOptions.body = body;\r\n        }\r\n\r\n        // \u53D1\u9001\u8BF7\u6C42\u5230\u98DE\u4E66API\r\n        const response = await fetch(apiUrl, requestOptions);\r\n        const data = await response.text();\r\n\r\n        // \u5904\u7406\u56FE\u7247\u7B49\u4E8C\u8FDB\u5236\u6570\u636E\r\n        const contentType = response.headers.get('content-type');\r\n        let responseBody = data;\r\n\r\n        if (contentType && contentType.startsWith('image/')) {\r\n            // \u5BF9\u4E8E\u56FE\u7247\uFF0C\u8FD4\u56DEbase64\u7F16\u7801\r\n            const buffer = await response.arrayBuffer();\r\n            const base64 = Buffer.from(buffer).toString('base64');\r\n            responseBody = `data:${contentType};base64,${base64}`;\r\n        } else {\r\n            try {\r\n                // \u5C1D\u8BD5\u89E3\u6790\u4E3AJSON\r\n                JSON.parse(data);\r\n                responseBody = data;\r\n            } catch (e) {\r\n                // \u5982\u679C\u4E0D\u662FJSON\uFF0C\u76F4\u63A5\u8FD4\u56DE\u539F\u59CB\u6570\u636E\r\n                responseBody = data;\r\n            }\r\n        }\r\n\r\n        return {\r\n            statusCode: response.status,\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n                'Content-Type': contentType || 'application/json'\r\n            },\r\n            body: responseBody\r\n        };\r\n\r\n    } catch (error) {\r\n        console.error('Proxy error:', error);\r\n\r\n        return {\r\n            statusCode: 500,\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                error: 'Proxy error',\r\n                message: error.message\r\n            })\r\n        };\r\n    }\r\n}; "],
  "mappings": ";AAAA,QAAQ,UAAU,OAAO,OAAO,YAAY;AACxC,QAAM,EAAE,YAAY,MAAM,SAAS,KAAK,IAAI;AAG5C,QAAM,UAAU,KAAK,QAAQ,6BAA6B,EAAE;AAC5D,QAAM,SAAS,yBAAyB,OAAO;AAE/C,UAAQ,IAAI,wBAAwB,MAAM;AAE1C,MAAI;AAEA,UAAM,iBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,iBAAiB,QAAQ,iBAAiB,QAAQ;AAAA,QAClD,gBAAgB,QAAQ,cAAc,KAAK;AAAA,MAC/C;AAAA,IACJ;AAGA,QAAI,eAAe,UAAU,eAAe,OAAO;AAC/C,qBAAe,OAAO;AAAA,IAC1B;AAGA,UAAM,WAAW,MAAM,MAAM,QAAQ,cAAc;AACnD,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,UAAM,cAAc,SAAS,QAAQ,IAAI,cAAc;AACvD,QAAI,eAAe;AAEnB,QAAI,eAAe,YAAY,WAAW,QAAQ,GAAG;AAEjD,YAAM,SAAS,MAAM,SAAS,YAAY;AAC1C,YAAM,SAAS,OAAO,KAAK,MAAM,EAAE,SAAS,QAAQ;AACpD,qBAAe,QAAQ,WAAW,WAAW,MAAM;AAAA,IACvD,OAAO;AACH,UAAI;AAEA,aAAK,MAAM,IAAI;AACf,uBAAe;AAAA,MACnB,SAAS,GAAG;AAER,uBAAe;AAAA,MACnB;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,YAAY,SAAS;AAAA,MACrB,SAAS;AAAA,QACL,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,QAChC,gBAAgB,eAAe;AAAA,MACnC;AAAA,MACA,MAAM;AAAA,IACV;AAAA,EAEJ,SAAS,OAAO;AACZ,YAAQ,MAAM,gBAAgB,KAAK;AAEnC,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,SAAS;AAAA,QACL,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,QAChC,gBAAgB;AAAA,MACpB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACjB,OAAO;AAAA,QACP,SAAS,MAAM;AAAA,MACnB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;",
  "names": []
}
